<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<context:annotation-config />

	<!--Scan Controller-->
	<context:component-scan base-package="cn.edu.ncut.doubanWebSpider" />


	<!--数据传输使用UTF8 编码，避免传输时中文乱码 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:db.properties</value>
				<value>classpath*:log4j.properties</value>
			</list>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 启动@ResponseBody和@RequestBody的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" /> <!-- json转换器 -->
			</list>
		</property>
	</bean>

	<!--404 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">404</prop>
				<prop key="java.lang.Throwable">404</prop>
			</props>
		</property>
		<!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
		<property name="warnLogCategory" value="WARN"></property>
		<property name="statusCodes">
			<props>
				<prop key="error">500</prop>
				<prop key="404">404</prop>
			</props>
		</property>
	</bean>
	<!--&lt;!&ndash; 启动SpringMVC的注解功能，完成请求和注解POJO的映射 &ndash;&gt;-->
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>-->

	<!--&lt;!&ndash; 定义跳转的文件的前后缀 ，视图模式配置&ndash;&gt;-->
	<!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
		<!--&lt;!&ndash; 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 &ndash;&gt;-->
		<!--<property name="prefix" value="/"/>-->
		<!--<property name="suffix" value=".jsp"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash; 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 &ndash;&gt;-->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
		<!--&lt;!&ndash; 默认编码 &ndash;&gt;-->
		<!--<property name="defaultEncoding" value="utf-8"/>-->
		<!--&lt;!&ndash; 文件大小最大值 &ndash;&gt;-->
		<!--<property name="maxUploadSize" value="10485760000"/>-->
		<!--&lt;!&ndash; 内存中的最大值 &ndash;&gt;-->
		<!--<property name="maxInMemorySize" value="40960"/>-->
	<!--</bean>-->


	<!--<mvc:interceptors>-->
		<!--&lt;!&ndash; 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 &ndash;&gt;-->
		<!--<bean class="com.andy.manager.common.interceptor.CommonInterceptor"/>-->
	<!--</mvc:interceptors>-->
</beans>